{
  "type": "Program",
  "start": 0,
  "end": 1447,
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 45,
      "column": 0
    }
  },
  "sourceType": "module",
  "body": [
    {
      "type": "ExpressionStatement",
      "start": 0,
      "end": 11,
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 1,
          "column": 11
        }
      },
      "expression": {
        "type": "Literal",
        "start": 0,
        "end": 11,
        "loc": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 11
          }
        },
        "value": "use babel",
        "rawValue": "use babel",
        "raw": "'use babel'"
      }
    },
    {
      "type": "ImportDeclaration",
      "start": 13,
      "end": 63,
      "loc": {
        "start": {
          "line": 3,
          "column": 0
        },
        "end": {
          "line": 3,
          "column": 50
        }
      },
      "specifiers": [
        {
          "type": "ImportSpecifier",
          "start": 21,
          "end": 44,
          "loc": {
            "start": {
              "line": 3,
              "column": 8
            },
            "end": {
              "line": 3,
              "column": 31
            }
          },
          "imported": {
            "type": "Identifier",
            "start": 21,
            "end": 44,
            "loc": {
              "start": {
                "line": 3,
                "column": 8
              },
              "end": {
                "line": 3,
                "column": 31
              }
            },
            "name": "registerOrUpdateElement"
          },
          "local": {
            "type": "Identifier",
            "start": 21,
            "end": 44,
            "loc": {
              "start": {
                "line": 3,
                "column": 8
              },
              "end": {
                "line": 3,
                "column": 31
              }
            },
            "name": "registerOrUpdateElement"
          }
        }
      ],
      "importKind": "value",
      "source": {
        "type": "Literal",
        "start": 51,
        "end": 63,
        "loc": {
          "start": {
            "line": 3,
            "column": 38
          },
          "end": {
            "line": 3,
            "column": 50
          }
        },
        "value": "atom-utils",
        "rawValue": "atom-utils",
        "raw": "'atom-utils'",
        "leadingComments": null,
        "trailingComments": null
      },
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * Generates a decorator function to convert a class into a custom element\n * through the `registerOrUpdateElement` method from `atom-utils`.\n *\n * The decorator will take care to return the generated element class so that\n * you can just export it directly as demonstrated below.\n *\n * As supported by the `registerOrUpdateElement` method, static member will\n * be available on the new class.\n *\n * **Note: As there's some limitations when modifying the prototype\n * of a custom element, if you need to inject element callbacks (like\n * `createdCallback`) through a mixin, the mixins should be included before\n * converting the class as a custom element. You'll be able to achieve that by\n * placing the `include` decorator after the `element` one as shown in the\n * second example.**\n *\n * @param  {string} elementName the node name of the element to register\n * @return {Function} the element class as returned by\n *                    `document.registerElement`\n * @example\n * @element('dummy-element-name')\n * export default class SomeClass {\n *   // ...\n * }\n *\n * @element('dummy-element-with-mixin')\n * @include(SomeMixin)\n * export default class SomeClass {\n *   // ...\n * }\n ",
          "start": 65,
          "end": 1256,
          "loc": {
            "start": {
              "line": 5,
              "column": 0
            },
            "end": {
              "line": 36,
              "column": 3
            }
          },
          "range": [
            65,
            1256
          ]
        }
      ]
    },
    {
      "type": "ExportDefaultDeclaration",
      "start": 1257,
      "end": 1446,
      "loc": {
        "start": {
          "line": 37,
          "column": 0
        },
        "end": {
          "line": 44,
          "column": 1
        }
      },
      "declaration": {
        "type": "FunctionDeclaration",
        "start": 1272,
        "end": 1446,
        "loc": {
          "start": {
            "line": 37,
            "column": 15
          },
          "end": {
            "line": 44,
            "column": 1
          }
        },
        "id": {
          "type": "Identifier",
          "start": 1281,
          "end": 1288,
          "loc": {
            "start": {
              "line": 37,
              "column": 24
            },
            "end": {
              "line": 37,
              "column": 31
            }
          },
          "name": "element",
          "leadingComments": null
        },
        "generator": false,
        "expression": false,
        "async": false,
        "params": [
          {
            "type": "Identifier",
            "start": 1290,
            "end": 1301,
            "loc": {
              "start": {
                "line": 37,
                "column": 33
              },
              "end": {
                "line": 37,
                "column": 44
              }
            },
            "name": "elementName"
          }
        ],
        "body": {
          "type": "BlockStatement",
          "start": 1303,
          "end": 1446,
          "loc": {
            "start": {
              "line": 37,
              "column": 46
            },
            "end": {
              "line": 44,
              "column": 1
            }
          },
          "body": [
            {
              "type": "ReturnStatement",
              "start": 1307,
              "end": 1444,
              "loc": {
                "start": {
                  "line": 38,
                  "column": 2
                },
                "end": {
                  "line": 43,
                  "column": 3
                }
              },
              "argument": {
                "type": "FunctionExpression",
                "start": 1314,
                "end": 1444,
                "loc": {
                  "start": {
                    "line": 38,
                    "column": 9
                  },
                  "end": {
                    "line": 43,
                    "column": 3
                  }
                },
                "id": null,
                "generator": false,
                "expression": false,
                "async": false,
                "params": [
                  {
                    "type": "Identifier",
                    "start": 1324,
                    "end": 1327,
                    "loc": {
                      "start": {
                        "line": 38,
                        "column": 19
                      },
                      "end": {
                        "line": 38,
                        "column": 22
                      }
                    },
                    "name": "cls"
                  }
                ],
                "body": {
                  "type": "BlockStatement",
                  "start": 1329,
                  "end": 1444,
                  "loc": {
                    "start": {
                      "line": 38,
                      "column": 24
                    },
                    "end": {
                      "line": 43,
                      "column": 3
                    }
                  },
                  "body": [
                    {
                      "type": "VariableDeclaration",
                      "start": 1335,
                      "end": 1416,
                      "loc": {
                        "start": {
                          "line": 39,
                          "column": 4
                        },
                        "end": {
                          "line": 41,
                          "column": 6
                        }
                      },
                      "declarations": [
                        {
                          "type": "VariableDeclarator",
                          "start": 1339,
                          "end": 1416,
                          "loc": {
                            "start": {
                              "line": 39,
                              "column": 8
                            },
                            "end": {
                              "line": 41,
                              "column": 6
                            }
                          },
                          "id": {
                            "type": "Identifier",
                            "start": 1339,
                            "end": 1351,
                            "loc": {
                              "start": {
                                "line": 39,
                                "column": 8
                              },
                              "end": {
                                "line": 39,
                                "column": 20
                              }
                            },
                            "name": "elementClass"
                          },
                          "init": {
                            "type": "CallExpression",
                            "start": 1354,
                            "end": 1416,
                            "loc": {
                              "start": {
                                "line": 39,
                                "column": 23
                              },
                              "end": {
                                "line": 41,
                                "column": 6
                              }
                            },
                            "callee": {
                              "type": "Identifier",
                              "start": 1354,
                              "end": 1377,
                              "loc": {
                                "start": {
                                  "line": 39,
                                  "column": 23
                                },
                                "end": {
                                  "line": 39,
                                  "column": 46
                                }
                              },
                              "name": "registerOrUpdateElement"
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "start": 1378,
                                "end": 1389,
                                "loc": {
                                  "start": {
                                    "line": 39,
                                    "column": 47
                                  },
                                  "end": {
                                    "line": 39,
                                    "column": 58
                                  }
                                },
                                "name": "elementName"
                              },
                              {
                                "type": "ObjectExpression",
                                "start": 1391,
                                "end": 1415,
                                "loc": {
                                  "start": {
                                    "line": 39,
                                    "column": 60
                                  },
                                  "end": {
                                    "line": 41,
                                    "column": 5
                                  }
                                },
                                "properties": [
                                  {
                                    "type": "Property",
                                    "start": 1399,
                                    "end": 1409,
                                    "loc": {
                                      "start": {
                                        "line": 40,
                                        "column": 6
                                      },
                                      "end": {
                                        "line": 40,
                                        "column": 16
                                      }
                                    },
                                    "method": false,
                                    "shorthand": false,
                                    "computed": false,
                                    "key": {
                                      "type": "Identifier",
                                      "start": 1399,
                                      "end": 1404,
                                      "loc": {
                                        "start": {
                                          "line": 40,
                                          "column": 6
                                        },
                                        "end": {
                                          "line": 40,
                                          "column": 11
                                        }
                                      },
                                      "name": "class"
                                    },
                                    "value": {
                                      "type": "Identifier",
                                      "start": 1406,
                                      "end": 1409,
                                      "loc": {
                                        "start": {
                                          "line": 40,
                                          "column": 13
                                        },
                                        "end": {
                                          "line": 40,
                                          "column": 16
                                        }
                                      },
                                      "name": "cls"
                                    },
                                    "kind": "init"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ],
                      "kind": "let"
                    },
                    {
                      "type": "ReturnStatement",
                      "start": 1421,
                      "end": 1440,
                      "loc": {
                        "start": {
                          "line": 42,
                          "column": 4
                        },
                        "end": {
                          "line": 42,
                          "column": 23
                        }
                      },
                      "argument": {
                        "type": "Identifier",
                        "start": 1428,
                        "end": 1440,
                        "loc": {
                          "start": {
                            "line": 42,
                            "column": 11
                          },
                          "end": {
                            "line": 42,
                            "column": 23
                          }
                        },
                        "name": "elementClass"
                      }
                    }
                  ]
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * Generates a decorator function to convert a class into a custom element\n * through the `registerOrUpdateElement` method from `atom-utils`.\n *\n * The decorator will take care to return the generated element class so that\n * you can just export it directly as demonstrated below.\n *\n * As supported by the `registerOrUpdateElement` method, static member will\n * be available on the new class.\n *\n * **Note: As there's some limitations when modifying the prototype\n * of a custom element, if you need to inject element callbacks (like\n * `createdCallback`) through a mixin, the mixins should be included before\n * converting the class as a custom element. You'll be able to achieve that by\n * placing the `include` decorator after the `element` one as shown in the\n * second example.**\n *\n * @param  {string} elementName the node name of the element to register\n * @return {Function} the element class as returned by\n *                    `document.registerElement`\n * @example\n * @element('dummy-element-name')\n * export default class SomeClass {\n *   // ...\n * }\n *\n * @element('dummy-element-with-mixin')\n * @include(SomeMixin)\n * export default class SomeClass {\n *   // ...\n * }\n ",
            "start": 65,
            "end": 1256,
            "loc": {
              "start": {
                "line": 5,
                "column": 0
              },
              "end": {
                "line": 36,
                "column": 3
              }
            },
            "range": [
              65,
              1256
            ]
          }
        ],
        "trailingComments": []
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * Generates a decorator function to convert a class into a custom element\n * through the `registerOrUpdateElement` method from `atom-utils`.\n *\n * The decorator will take care to return the generated element class so that\n * you can just export it directly as demonstrated below.\n *\n * As supported by the `registerOrUpdateElement` method, static member will\n * be available on the new class.\n *\n * **Note: As there's some limitations when modifying the prototype\n * of a custom element, if you need to inject element callbacks (like\n * `createdCallback`) through a mixin, the mixins should be included before\n * converting the class as a custom element. You'll be able to achieve that by\n * placing the `include` decorator after the `element` one as shown in the\n * second example.**\n *\n * @param  {string} elementName the node name of the element to register\n * @return {Function} the element class as returned by\n *                    `document.registerElement`\n * @example\n * @element('dummy-element-name')\n * export default class SomeClass {\n *   // ...\n * }\n *\n * @element('dummy-element-with-mixin')\n * @include(SomeMixin)\n * export default class SomeClass {\n *   // ...\n * }\n ",
          "start": 65,
          "end": 1256,
          "loc": {
            "start": {
              "line": 5,
              "column": 0
            },
            "end": {
              "line": 36,
              "column": 3
            }
          },
          "range": [
            65,
            1256
          ]
        }
      ]
    }
  ]
}